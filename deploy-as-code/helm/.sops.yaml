# creation rules are evaluated sequentially, the first match wins
creation_rules:
        # upon creation of a file that matches the pattern *dev.yaml,
        # KMS set A is used
        # eGOV Internal ------------------------------------------------------------------------------------------------------------- #
        - path_regex: environments/dev\-secrets\.yaml$
          #kms: 
          #gcp_kms: 
          #pgp:    

        - path_regex: environments/qa\-secrets\.yaml$
          #kms: 
          ##gcp_kms: 
          #pgp:   

        - path_regex: environments/uat\-secrets\.yaml$
          #kms: 
          ##gcp_kms: 
          #pgp:    
       
        - path_regex: environments/staging\-secrets\.yaml$
          #kms: 
          ##gcp_kms: 
          #pgp:   

        # CI ------------------------------------------------------------------------------------------------------------- #
        - path_regex: environments/ci\-secrets\.yaml$
          kms: 'arn:aws:kms:ap-south-1:218381940040:key/9a3b0835-7713-4925-8b3d-da7e421d28d2'
          #gcp_kms: 
          #pgp:                


 
        # DEFAULT ------------------------------------------------------------------------------------------------------------- #
        # Finally, if the rules above have not matched, this one is a
        # catchall that will encrypt the file using KMS set C
        # The absence of a path_regex means it will match everything
        #- kms: 
          ##gcp_kms: 
          encrypted_regex: '^(secrets)$'
          #pgp: 

        # - path_regex: environments/dev\.yaml$
        #   encrypted_regex: '^(secrets)$'
        ##   kms: 'arn:aws:kms:ap-south-1:218381940040:key/9a3b0835-7713-4925-8b3d-da7e421d28d2'
        ##   pgp: 'C7ED80C79625B40667A6FAD6774DE10645AAD1BB'
