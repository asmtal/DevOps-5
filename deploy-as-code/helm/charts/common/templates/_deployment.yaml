{{- define "common.deployment" -}}
{{- if .Capabilities.APIVersions.Has "apps/v1" }}
apiVersion: apps/v1
{{- else }}
apiVersion: extensions/v1beta1
{{- end }}
kind: Deployment
metadata:
  name: {{ template "common.name" . }}
  namespace: {{ .Values.namespace }}
  labels:
{{- include "common.labels" . | nindent 4 }}   
spec:
{{- if .Capabilities.APIVersions.Has "apps/v1" }}
  selector:
    matchLabels:
      {{- include "common.labels" . | nindent 6 }}  
{{- end }}
{{- $persistence := .Values.persistence | default dict -}}
{{- if and (not (hasKey $persistence "enabled")) (eq (.Values.replicas | int) 1) }}
  strategy:
    rollingUpdate:
      maxUnavailable: 0
{{- end }}     
  replicas: {{ .Values.replicas }}
  template:
    metadata:  
      annotations:
      {{- if not .Values.disableAnnotationTimestamp }}      
        deployment-timestamp: "{{ date "20060102150405" .Release.Time }}"    
      {{- end }}          
      {{- if .Values.additionalAnnotations }}                                   
        {{- tpl  .Values.additionalAnnotations . | nindent 8 }}
      {{- end }}        
      labels:
      {{- include "common.labels" . | nindent 8 }}            
    spec:           
      {{- if .Values.affinity.preferSpreadAcrossAZ }}
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              topologyKey: "failure-domain.beta.kubernetes.io/zone"
              labelSelector:
                matchLabels:
                {{- include "common.labels" . | nindent 18 }}     
      {{- end }}                
      containers:
      {{- with .Values.extraContainers }}
        {{- tpl . $ | nindent 8 }}
      {{- end }}      
        - name: {{ template "common.name" . }}
          image: {{ template "common.image" (dict "Values" $.Values "repository" .Values.image.repository "tag" .Values.image.tag) }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}  
      {{- if .Values.args }}              
          args:  
          {{- tpl  .Values.args . | nindent 12 }}          
      {{- end }}             
          ports:
            - name: http
              containerPort: {{ .Values.httpPort }}
              protocol: TCP
      {{- if .Values.extraVolumeMounts }}      
          volumeMounts:              
          {{- with .Values.extraVolumeMounts }}
          {{- tpl . $ | nindent 10 }}
          {{- end }}
      {{- end }}                       
      {{- if or .Values.env (eq .Values.appType "micro") }}                         
          env:  
        {{- if .Values.env }}                                   
          {{- tpl  .Values.env . | nindent 12 }}
        {{- end -}}         
        {{- if eq .Values.appType "micro" }} 
          {{- tpl  .Values.extraEnv.shared . | nindent 12 }}         
        {{- end -}} 
      {{- end }}
      {{- if .Values.resources }}                                     
          resources:
            {{- tpl .Values.resources . | nindent 12 }}
      {{- end }}            
    {{- with .Values.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
    {{- end }}
{{- end -}}
